{"name":"browser-json-client","tagline":"A simple http client for interacting with JSON APIs in the browser","body":"## Installation\r\n```\r\nnpm install browser-json-client\r\n```\r\n\r\n## Usage\r\nThis module is built to work specically with JSON APIs. Because of this, the `Content-Type` header is set to `application/json` by default. It also assumes that the api responses are JSON objects.\r\n\r\n```javascript\r\nvar client = require('browser-json-client');\r\n\r\n// default options\r\nvar options = {\r\n  async: true,\r\n  data: {},\r\n  error: function () {},\r\n  headers: [],\r\n  success: function () {}\r\n};\r\n\r\nclient.get('http://youapiendpoint.com/whatever', options);\r\n```\r\n\r\n## Options\r\nEach request takes an options object. The available options are:\r\n\r\n#### `async` (boolean)\r\nDetermines if the request should be made asynchronously\r\n\r\n#### `data` (object)\r\nA JSON object that will be sent with the http request\r\n\r\n#### `error` (function)\r\nA function that will be called if the request responds with an error\r\n\r\n```javascript\r\n{\r\n  error: function (response) {\r\n    console.error(response);\r\n  }\r\n}\r\n```\r\n\r\n#### `headers` (array)\r\nAn array of objects that will be set as headers on the request. Each object should contain a `name` and `value` property.\r\n\r\n```javascript\r\n{\r\n  headers: [\r\n    { name: 'Context-Type', value: 'application/json' }\r\n  ]\r\n}\r\n```\r\n\r\n#### `success` (function)\r\nA function that will be called if the request is successful. It returns the response body as a JSON object.\r\n\r\n```javascript\r\n{\r\n  success: function (response) {\r\n    console.log(response.yourData);\r\n  }\r\n}\r\n```\r\n\r\n## Methods\r\n#### `.get(url, options)`\r\nThis sends a GET request to the provided URL.\r\n\r\n```javascript\r\nvar client = require('browser-json-client');\r\n\r\nclient.get('http://youapiendpoint.com/whatever', {\r\n  error: function (response) {\r\n    // response is a JSON object\r\n  },\r\n  success: function (response) {\r\n    // response is a JSON object\r\n  }\r\n});\r\n```\r\n\r\n#### `.post(url, options)`\r\nThis sends a POST request to the provided URL.\r\n\r\n```javascript\r\nvar client = require('browser-json-client');\r\n\r\nclient.post('http://youapiendpoint.com/whatever', {\r\n  error: function (response) {\r\n    // response is a JSON object\r\n  },\r\n  success: function (response) {\r\n    // response is a JSON object\r\n  }\r\n});\r\n```\r\n\r\n#### `.put(url, options)`\r\nThis sends a PUT request to the provided URL.\r\n\r\n```javascript\r\nvar client = require('browser-json-client');\r\n\r\nclient.put('http://youapiendpoint.com/whatever', {\r\n  error: function (response) {\r\n    // response is a JSON object\r\n  },\r\n  success: function (response) {\r\n    // response is a JSON object\r\n  }\r\n});\r\n```\r\n\r\n#### `.del(url, options)`\r\nThis sends a DELETE request to the provided URL.\r\n\r\n```javascript\r\nvar client = require('browser-json-client');\r\n\r\nclient.del('http://youapiendpoint.com/whatever', {\r\n  error: function (response) {\r\n    // response is a JSON object\r\n  },\r\n  success: function (response) {\r\n    // response is a JSON object\r\n  }\r\n});\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}